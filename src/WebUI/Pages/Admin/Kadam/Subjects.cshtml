@page
@model WebUI.Pages.Admin.Kadam.SubjectsModel
@{
    ViewData["Title"] = "Subjects";
}
@Html.AntiForgeryToken()

<div class="page-content" ng-app="subjectsApp" ng-controller="subjectsController as vm">
    <div class="container-fluid">
        <!-- start page title -->
        <div class="row">
            <div class="col-12">
                <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                    <h4 class="mb-sm-0">Subjects</h4>
                    <div class="text-end">
                        <button type="button" class="btn btn-primary" ng-click="vm.openModal()">
                            Add Subject
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row dashboard-listing">
            <div class="col">
                <div class="h-100">
                    <div class="row mb-3 pb-1">
                        <div class="col-12">
                            <div class="table-responsive table-card">
                                <table id="subjectsTable" class="table table-nowrap w-100" aria-label="Subjects">
                                    <thead class="table-primary">
                                        <tr>
                                            <th>Subject Name</th>
                                            <th style="width: 8%;">Action</th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Add/Edit Subject Modal -->
    <div id="subjectModal" class="modal fade" tabindex="-1" aria-labelledby="subjectModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="subjectModalLabel">{{vm.modalTitle}}</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                
                <form name="subjectForm" ng-submit="vm.submitSubjectForm(subjectForm)" novalidate>
                    <div class="modal-body py-2">
                        <div class="form-group row">
                            <div class="col">
                                <label for="subjectName">Subject Name<span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="subjectName" name="subjectName" 
                                       ng-model="vm.subject.subjectName" required>
                                <span class="text-danger" ng-show="vm.isSubmit && subjectForm.subjectName.$error.required">
                                    Subject Name is required
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button class="btn btn-primary" type="submit" ng-disabled="vm.isSaving">
                            <span ng-if="vm.isSaving" class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                            <span ng-if="!vm.isSaving">Save</span>
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Loader Element -->
    <div id="loader" class="loader" ng-show="isLoading"></div>
</div>

<script src="//cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="~/js/custom-notification.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


@section Scripts {
    <script src="~/js/angular.js"></script>
    <script src="~/js/angular-sanitize.js"></script>
    <script src="~/js/loaderInterceptor.js"></script>

    <script>
        (function() {
            'use strict';

            var app = angular.module('subjectsApp', ['app']);

            // Add loader interceptor
            app.config(['$httpProvider', function($httpProvider) {
                $httpProvider.interceptors.push('loaderInterceptor');
            }]);

            app.run(['$rootScope', function($rootScope) {
                $rootScope.isLoading = false;
            }]);

            // Subject Service
            app.service('SubjectService', ['$http', '$q', function($http, $q) {
                var service = {};

                service.getSubjectList = function(params) {
                    return $http.get('?handler=SubjectList', { params: params })
                        .then(response => response.data)
                        .catch(error => $q.reject(error));
                };

                service.getSubject = function(id) {
                    return $http.get('?handler=SubjectDetail&id=' + id)
                        .then(response => response.data)
                        .catch(error => $q.reject(error));
                };

                service.saveSubject = function(data) {
                    return $http.post('?handler=SaveSubject', data, {
                        headers: { 'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val() }
                    })
                    .then(response => response.data)
                    .catch(error => $q.reject(error));
                };

                service.deleteSubject = function(id) {
                    return $http.post('?handler=DeleteSubject&id=' + id, null, {
                        headers: { 'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val() }
                    })
                    .then(response => response.data)
                    .catch(error => $q.reject(error));
                };

                return service;
            }]);

            // Subject Controller
            app.controller('subjectsController', ['SubjectService', '$scope', '$compile', 
                function(SubjectService, $scope, $compile) {
                    var vm = this;
                    
                    // Initialize variables
                    vm.subject = {};
                    vm.modalTitle = "Add Subject";
                    vm.isSaving = false;
                    vm.isSubmit = false;

                    // Initialize DataTable
                    vm.initDataTable = function() {
                        vm.dataTable = $('#subjectsTable').DataTable({
                            serverSide: true,
                            processing: true,
                            ajax: function(data, callback, settings) {
                                SubjectService.getSubjectList({
                                    draw: data.draw,
                                    start: data.start,
                                    length: data.length,
                                    searchValue: data.search.value
                                })
                                .then(function(response) {
                                    callback(response);
                                })
                                .catch(function(error) {
                                    console.error('Error fetching data:', error);
                                });
                            },
                            columns: [
                                { data: 'subjectName', name: 'SubjectName', autoWidth: true },
                                {
                                    data: null,
                                    orderable: false,
                                    createdCell: function(td, cellData, rowData, row, col) {
                                        var template = `
                                            <div class="btn-group">
                                                <button class="btn btn-sm btn-warning" ng-click="vm.editSubject(${rowData.id})">
                                                    <i class="mdi mdi-pencil"></i>
                                                </button>
                                                <button class="btn btn-sm btn-danger" ng-click="vm.deleteSubject(${rowData.id})">
                                                    <i class="mdi mdi-trash-can"></i>
                                                </button>
                                            </div>
                                        `;
                                        var compiledHtml = $compile(template)($scope);
                                        angular.element(td).empty().append(compiledHtml);
                                    }
                                }
                            ]
                        });
                    };

                    // ... continue with other methods, updated to use vm ...
                    vm.openModal = function() {
                        vm.subject = {};
                        vm.modalTitle = "Add Subject";
                        $('#subjectModal').modal('show');
                    };

                    vm.editSubject = function(id) {
                        vm.modalTitle = "Edit Subject";
                        SubjectService.getSubject(id)
                            .then(function(data) {
                                vm.subject = data;
                                $('#subjectModal').modal('show');
                            })
                            .catch(function(error) {
                                ShowNotification('Failed to load subject details.', 1);
                            });
                    };

                    vm.deleteSubject = function(id) {
                        Swal.fire({
                            title: 'Are you sure?',
                            text: "You won't be able to revert this!",
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Yes, delete it!'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                SubjectService.deleteSubject(id)
                                    .then(function(response) {
                                        if (response.success) {
                                            ShowNotification(response.message, 0);
                                            vm.dataTable.ajax.reload();
                                        } else {
                                            ShowNotification(response.message, 1);
                                        }
                                    })
                                    .catch(function(error) {
                                        ShowNotification('Failed to delete subject.', 1);
                                    });
                            }
                        });
                    };

                    // Initialize controller
                    vm.init = function() {
                        vm.initDataTable();
                    };

                    vm.init();

                    // Expose vm to scope for view binding
                    $scope.vm = vm;

                    vm.submitSubjectForm = function(form) {
                        vm.isSubmit = true;
                        if (form.$invalid) {
                            return;
                        }

                        vm.isSaving = true;
                        SubjectService.saveSubject(vm.subject)
                            .then(function(response) {
                                vm.isSaving = false;
                                vm.isSubmit = false;
                                if (response.success) {
                                    ShowNotification(response.message, 0);
                                    $('#subjectModal').modal('hide');
                                    vm.dataTable.ajax.reload();
                                } else {
                                    ShowNotification(response.message, 1);
                                }
                            })
                            .catch(function(error) {
                                vm.isSaving = false;
                                vm.isSubmit = false;
                                ShowNotification(error.message, 1);
                            });
                    };
                }
            ]);
        })();
    </script>
}
