@page
@model WebUI.Pages.Admin.PeoplesModel
@{
    ViewData["Title"] = "People Management";
}
@Html.AntiForgeryToken()

<div class="page-content" ng-app="peopleApp" ng-controller="peopleController">
    <div class="container-fluid">

        <!-- start page title -->
        <div class="row">
            <div class="col-12">
                <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                    <h4 class="mb-sm-0">Peoples </h4>
                    <div class="text-end">
                        <button type="button" class="btn btn-primary" ng-click="openAddPeopleModal()">
                            Add People
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <!-- end page title -->
        <!-- Search Page -->


        <div class="row dashboard-listing">
            <div class="col">
                <div class="h-100">
                    <div class="row mb-3 pb-1">
                        <div class="col-12">
                            <div class="table-responsive table-card">

                                <table id="peopleTable" class="table table-nowrap w-100" aria-label="Peoples">
                                    <thead class="table-primary">
                                        <tr>
                                            <th>Sr.No.</th>
                                            <th>Full Name</th>
                                            <th>User Name</th>
                                            <th>Gender</th>
                                            <th>Phone</th>
                                            <th>Email</th>
                                            <th>Role</th>
                                            <th>Reportee Role</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                </table>

                            </div>
                        </div>

                        <!--end col-->
                    </div>
                    <!--end row-->
                </div> <!-- end .h-100-->

            </div> <!-- end col -->

        </div>

    </div>
    <!-- container-fluid -->
    <!-- Add People Modal -->
    <div id="addPeopleModal" class="modal fade" tabindex="-1" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="myModalLabel">Add New People</h5>
                    <button type="button" id="ButtonAddProjectClose" class="btn-close" data-bs-dismiss="modal" aria-label="Close"> </button>
                </div>
                <form ng-submit="submitForm()">
                    <div class="modal-body py-2">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="firstName">First Name<span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="firstName" ng-model="userInfo.firstName" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="lastName">Last Name<span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="lastName" ng-model="userInfo.lastName" required>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="phone">Phone<span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="phone" ng-model="userInfo.phone" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="alternatePhone">Alternate Phone</label>
                                    <input type="text" class="form-control" id="alternatePhone" ng-model="userInfo.alternatePhone">
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="email">Email<span class="text-danger">*</span></label>
                                    <input type="email" class="form-control" id="email" ng-model="userInfo.email" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="userName">Username<span class="text-danger">*</span></label>
                                    <input type="text" class="form-control" id="userName" ng-model="userInfo.userName" required>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="gender">Gender<span class="text-danger">*</span></label>
                                    <select class="form-control" id="gender" ng-model="userInfo.gender" required>
                                        <option value="">Select</option>
                                        <option ng-repeat="gender in genders" value="{{gender.value}}">{{gender.text}}</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="roleId">Role<span class="text-danger">*</span></label>
                                    <select class="form-control" id="roleId" ng-model="userInfo.roleId" required>
                                        <option value="">Select</option>
                                        <option ng-repeat="role in roles" value="{{role.value}}">{{role.text}}</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label for="reporteeRoleId">Reportee Role<span class="text-danger">*</span></label>
                                    <select class="form-control" id="reporteeRoleId" ng-model="userInfo.reporteeRoleId" required>
                                        <option value="">Select</option>
                                        <option ng-repeat="role in reportRoles" value="{{role.value}}">{{role.text}}</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-sm btn-primary" type="submit">
                            Save
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

 @* <button class="btn btn-sm btn-success" title="View Assigned Institution" onclick="viewAssignedInstitution(${row.id})">
      <i class="mdi mdi-eye"></i>
</button>
      <button class="btn btn-sm btn-info" title="Email" onclick="emailPerson(${row.id})">
       <i class="fas fa-envelope"></i>
</button> 
<button class="btn btn-sm btn-primary mt-1" onclick="assignProgram(${row.id})">
                                    Assign Program
                                </button>
*@
<script src="//cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="~/js/custom-notification.js"></script>
<script src="/assets/libs/cleave.js/cleave.min.js"></script>
@section Scripts {
    <script src="~/js/angular.js"></script>
    <script src="~/js/angular-sanitize.js"></script>

    <script type="text/javascript">
         $(document).ready(function() {

             if (document.querySelector("#phone")) {
                 var cleaveBlocks = new Cleave('#phone', {
                     delimiters: [' ', '-'],
                     blocks: [0, 5, 5]
                 });
             }

            if (document.querySelector("#alternatePhone")) {
                var cleaveBlocks = new Cleave('#alternatePhone', {
                     delimiters: [' ', '-'],
                     blocks: [0, 5, 5]
                 });
             }
         });

       
    </script>
    <script>
        var app = angular.module('peopleApp', []);
        app.controller('peopleController', function ($scope, $http) {
            var dataTable = $('#peopleTable').DataTable({
                serverSide: true,
                processing: true,
                paging: true,
                ajax: function (data, callback, settings) {
                    $http({
                        method: 'GET',
                        url: '?handler=UserList',
                        params: {
                            draw: data.draw,
                            start: data.start,
                            length: data.length,
                            searchValue: data.search.value
                        },
                        headers: {
                            'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val()
                        }
                    }).then(function (response) {
                        callback(response.data);
                    }, function (error) {
                        console.error('Error fetching data:', error);
                    });
                },
                columns: [
                    { data: 'rowNumber' },
                    { data: 'fullName' },
                    { data: 'userName' },
                    { data: 'gender' },
                    { data: 'phone' },
                    { data: 'email' },
                    { data: 'roleId' },
                    { data: 'reporteeRoleId' },
                    {
                        data: null,
                        orderable: false,
                        render: function (data, type, row) {
                            var buttons = `
                                <div class="btn-group">
                                    <button class="btn btn-sm btn-warning" title="Edit" onclick="editPerson(${row.id})">
                                        <i class="mdi mdi-pencil"></i>
                                    </button>
                                    <button class="btn btn-sm btn-danger" title="Remove" onclick="removePerson(${row.id})">
                                        <i class="mdi mdi-close-thick"></i>
                                    </button>
                                </div>
                                
                                `;
                            return buttons;
                        }
                    }
                ],
                lengthMenu: [
                    [10, 25, 50, 100],
                    [10, 25, 50, 100]
                ],
                language: {
                    searchPlaceholder: "Search records",
                    info: "Showing _START_ to _END_ of _TOTAL_ records",
                    lengthMenu: "Show _MENU_ records",
                    infoEmpty: "Showing 0 to 0 of 0 records",
                    emptyTable: "No records found!"
                },
                bStateSave: true,
                fnStateSave: function (oSettings, oData) {
                    localStorage.setItem('PeopleTable_' + window.location.pathname, JSON.stringify(oData));
                },
                fnStateLoad: function (oSettings) {
                    return JSON.parse(localStorage.getItem('PeopleTable_' + window.location.pathname));
                }
            });

            // Global functions for action buttons
            window.editPerson = function(id) {
                // Implement edit logic
            };

            window.viewPerson = function(id) {
                // Implement view logic
            };

            window.emailPerson = function(id) {
                // Implement email logic
            };

            window.removePerson = function(id) {
                if (confirm('Are you sure you want to remove this person?')) {
                    $http.delete('/api/peoples/' + id)
                        .then(function() {
                            dataTable.ajax.reload();
                        })
                        .catch(function(error) {
                            console.error('Error removing person:', error);
                        });
                }
            };

            window.assignProgram = function(id) {
                // Implement assign program logic
            };

            $scope.userInfo = {
                firstName: '',
                lastName: '',
                email: '',
                userName: '',
                phone: '',
                alternatePhone: '',
                gender: '',
                roleId: '',
                reporteeRoleId: '',
                userStatus: 1,
                isDeleted: false
            };


            // In the peopleController, add/update the submitForm function:

                $scope.submitForm = function() {
                var userData = {
                    firstName: $scope.userInfo.firstName,
                    lastName: $scope.userInfo.lastName,
                    email: $scope.userInfo.email,
                    userName: $scope.userInfo.userName,
                    phone: $scope.userInfo.phone,
                    alternatePhone: $scope.userInfo.alternatePhone,
                    gender: parseInt($scope.userInfo.gender),
                    roleId: parseInt($scope.userInfo.roleId),
                    reporteeRoleId: parseInt($scope.userInfo.reporteeRoleId),
                    userStatus: 1,
                    isDeleted: false
                };

                var url = '?handler=SaveUser';

                $http({
                    method: 'POST',
                    url: url,
                    data: userData, // Send user data in the request body
                    headers: {
                        'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val()
                    },
                    contentType: "application/json; charset=utf-8",
                }).then(function(response) {
                    if (response.data.success) {
                        ShowNotification(response.data.message, 0);
                        $('#addPeopleModal').modal('hide');
                        $scope.userInfo = {
                            firstName: '',
                            lastName: '',
                            email: '',
                            userName: '',
                            phone: '',
                            alternatePhone: '',
                            gender: '',
                            roleId: '',
                            reporteeRoleId: '',
                            userStatus: 1,
                            isDeleted: false
                        };
                        $('#peopleTable').DataTable().ajax.reload();
                    } else {
                        ShowNotification(response.data.message, 1);
                    }
                }).catch(function(error) {
                    ShowNotification(error.message, 1);
                });
            };

            // Add function to load initial data
            $scope.loadInitialData = function(id = 0) {
                $http({
                    method: 'GET',
                    url: '?handler=InitialData',
                    params: { id: id },
                    headers: {
                        'RequestVerificationToken': $('input:hidden[name="__RequestVerificationToken"]').val()
                    }
                }).then(function(response) {
                    console.log('Response received:', response.data);
                    $scope.genders = response.data.genders;
                    $scope.roles = response.data.roles;
                    $scope.reportRoles = response.data.reportRoles;
                    $scope.userInfo = response.data.userInfo;
                    $('#addPeopleModal').modal('show');
                }).catch(function(error) {
                    console.error('Error loading initial data:', error);
                    // Add user feedback
                    alert('Failed to load initial data. Please try again.');
                });
            };

            // Ensure the modal is properly initialized
            $scope.openAddPeopleModal = function(id = 0) {
                console.log('Opening modal for id:', id);
                $scope.loadInitialData(id);
            };

            // Initialize the modal
            $(document).ready(function() {
                var modal = new bootstrap.Modal(document.getElementById('addPeopleModal'));
            });
        });
    </script>
}
